(*

	FoxNet: The Fox Project's Communication Protocol Implementation Effort
	Sidd Puri (puri@cs.cmu.edu)
	Edoardo Biagioni (Edoardo.Biagioni@cs.cmu.edu)
	Ken Cline (Kenneth.Cline@cs.cmu.edu)
	Fox Project
	School of Computer Science
	Carnegie Mellon University
	Pittsburgh, Pa 15213-3891

		i.	Abstract

	Telnet options and functions for handling them.

		ii.	Table of Contents

	i.	Abstract
	ii.	Table of Contents
	iii.	RCS Log
	1.	structure Telnet_Option
	2.	type option_type
	3.	type environment_variable
	4.	type option_value
	5.	type action
	6.	type request

		iii.	RCS Log
	
$Log: telnetopt.str,v $
Revision 1.1  1996/07/05  17:43:21  esb
Initial revision


		1.	structure Telnet_Option
*)

structure Telnet_Option: TELNET_OPTION =
 struct

(*
		2.	type option_type
*)

  datatype option_type =
      Binary				(* RFC 856 *)
    | Echo				(* RFC 857 *)
    | Suppress_Go_Ahead			(* RFC 858 *)
    | Status				(* RFC 859 *)
    | Timing_Mark			(* RFC 860 *)
    | Window_Size			(* RFC 1073 *)
    | Terminal_Speed			(* RFC 1079 *)
    | Terminal_Type			(* RFC 1091 *)
    | Remote_Flow_Control		(* RFC 1372 *)
    | X_Display_Location		(* RFC 1096 *)
    | Environment			(* RFC 1572 *)
    | Old_Environment			(* RFC 1408 *)
    | Unknown of Word8.word

  fun makestring_option_type Binary              = "Binary"
    | makestring_option_type Echo                = "Echo"
    | makestring_option_type Suppress_Go_Ahead   = "Suppress Go Ahead"
    | makestring_option_type Status              = "Status"
    | makestring_option_type Timing_Mark         = "Timing Mark"
    | makestring_option_type Terminal_Type       = "Terminal Type"
    | makestring_option_type Window_Size         = "Window Size"
    | makestring_option_type Terminal_Speed      = "Terminal Speed"
    | makestring_option_type Remote_Flow_Control = "Remote Flow Control"
    | makestring_option_type X_Display_Location  = "X Display Location"
    | makestring_option_type Environment         = "New Environment"
    | makestring_option_type Old_Environment     = "Old Environment"
    | makestring_option_type (Unknown value)     =
       "Unknown 0x" ^ Word8.toString value

  fun hash_option_type Binary              = 0
    | hash_option_type Echo                = 1
    | hash_option_type Suppress_Go_Ahead   = 2
    | hash_option_type Status              = 3
    | hash_option_type Timing_Mark         = 4
    | hash_option_type Terminal_Type       = 5
    | hash_option_type Window_Size         = 6
    | hash_option_type Terminal_Speed      = 7
    | hash_option_type Remote_Flow_Control = 8
    | hash_option_type X_Display_Location  = 9
    | hash_option_type Environment         = 10
    | hash_option_type Old_Environment     = 11
    | hash_option_type (Unknown value)     = Word8.toInt value

(*
		3.	type environment_variable
*)

  datatype environment_variable =
     (* well-known environment variables, RFC 1572 *)
      All_Vars | User_Name | Job | Account | Printer | System_Type | Display
     (* "User" environment variables *)
    | User of string

  fun makestring_environment_variable All_Vars    = "all well-known variables"
    | makestring_environment_variable User_Name   = "USER"
    | makestring_environment_variable Job         = "JOB"
    | makestring_environment_variable Account     = "ACCOUNT"
    | makestring_environment_variable Printer     = "PRINTER"
    | makestring_environment_variable System_Type = "SYTEMTYPE"
    | makestring_environment_variable Display     = "DISPLAY"
    | makestring_environment_variable (User var)  = "non-standard:" ^ var

  fun makestring_environment_list [] = ""
    | makestring_environment_list [last] = makestring_environment_variable last
    | makestring_environment_list (first :: rest) =
       makestring_environment_variable first ^ ", " ^ 
       makestring_environment_list rest

  fun makestring_environment_value NONE = " (undefined)"
    | makestring_environment_value (SOME "") = " (defined)"
    | makestring_environment_value (SOME value) = "=" ^ value

  fun makestring_environment_pair (env, value) =
       makestring_environment_variable env ^ makestring_environment_value value

  fun makestring_environment_pairs [] = ""
    | makestring_environment_pairs [last] =
       makestring_environment_pair last
    | makestring_environment_pairs (first :: rest) =
       makestring_environment_pair first ^ ", " ^ 
       makestring_environment_pairs rest

(*
		4.	type option_value
*)

  datatype option_value =
      Window_Size_Is of {columns: int, rows: int}	(* RFC 1073 *)

    | Request_Terminal_Speed				(* RFC 1079 *)
    | Terminal_Speed_Is of {send: int, receive: int}	(* RFC 1079 *)

    | Request_Terminal_Type				(* RFC 1091 *)
    | Terminal_Type_Is of string			(* RFC 1091 *)

    | Disable_Flow_Control				(* RFC 1372 *)
    | Enable_Flow_Control				(* RFC 1372 *)
    | Flow_Control_Any					(* RFC 1372 *)
    | Flow_Control_Xon					(* RFC 1372 *)

    | Request_X_Display					(* RFC 1096 *)
    | X_Display_Is of {host: string, display: int,
		       screen: int option}		(* RFC 1096 *)

    | Request_Environment of environment_variable list	(* RFC 1572 *)
      (* in the following two, the string option is NONE if the
         variable is undefined, and SOME "" if it is defined but
	 has no value (see RFC 1572, p. 2). *)
    | Environment_Is of (environment_variable * string option) list
    | Environment_Update of (environment_variable * string option) list

    | Old_Request_Environment of environment_variable list
      (* RFC 1408, 1571, 1572 *)
      (* in the following two, the string option is NONE if the
         variable is undefined, and SOME "" if it is defined but
	 has no value (see RFC 1408, p. 3). *)
    | Old_Environment_Is of (environment_variable * string option) list
    | Old_Environment_Update of (environment_variable * string option) list

    | Wrong_Request_Environment of environment_variable list	(* RFC 1408 *)
      (* in the following two, the string option is NONE if the
         variable is undefined, and SOME "" if it is defined but
	 has no value (see RFC 1408, p. 3). *)
    | Wrong_Environment_Is of (environment_variable * string option) list
    | Wrong_Environment_Update of (environment_variable * string option) list

  fun makestring_option_value Request_Terminal_Type = "request terminal type"
    | makestring_option_value (Terminal_Type_Is term) =
       "terminal type is " ^ term
    | makestring_option_value (Window_Size_Is {columns, rows}) =
       "window is " ^ Int.toString columns ^ " columns by " ^
       Int.toString rows ^ " rows"
    | makestring_option_value Request_Terminal_Speed = "request terminal speed"
    | makestring_option_value (Terminal_Speed_Is {send, receive}) =
       "terminal sends at " ^ Int.toString send ^ " bps, receives at " ^
       Int.toString receive ^ " bps"
    | makestring_option_value Disable_Flow_Control = "disable flow control"
    | makestring_option_value Enable_Flow_Control = "enable flow control"
    | makestring_option_value Flow_Control_Any =
       "flow control turned on by any character"
    | makestring_option_value Flow_Control_Xon =
       "flow control turned on by XON only"
    | makestring_option_value Request_X_Display = "request X display"
    | makestring_option_value (X_Display_Is {host, display, screen}) =
       "X display is " ^ host ^ ":" ^ Int.toString display ^
       (case screen of NONE => "" | SOME s => "." ^ Int.toString s)
    | makestring_option_value (Request_Environment list) =
       "request environment: " ^ makestring_environment_list list
    | makestring_option_value (Environment_Is list) =
       "environment is: " ^ makestring_environment_pairs list
    | makestring_option_value (Environment_Update list) =
       "environment update: " ^ makestring_environment_pairs list
    | makestring_option_value (Old_Request_Environment list) =
       "(old) request environment: " ^ makestring_environment_list list
    | makestring_option_value (Old_Environment_Is list) =
       "(old) environment is: " ^ makestring_environment_pairs list
    | makestring_option_value (Old_Environment_Update list) =
       "(old) environment update: " ^ makestring_environment_pairs list
    | makestring_option_value (Wrong_Request_Environment list) =
       "(old/wrong) request environment: " ^ makestring_environment_list list
    | makestring_option_value (Wrong_Environment_Is list) =
       "(old/wrong) environment is: " ^ makestring_environment_pairs list
    | makestring_option_value (Wrong_Environment_Update list) =
       "(old/wrong) environment update: " ^ makestring_environment_pairs list

(*
		5.	type action
*)

  datatype action =
      Activate				(* turn on for the local host *)
    | Deactivate			(* turn off for the local host *)
    | Accept				(* turn on for the remote host *)
    | Refuse				(* turn off for the remote host *)

  fun makestring_action Activate = "activate"
    | makestring_action Deactivate = "turn off"
    | makestring_action Accept = "ask remote for"
    | makestring_action Refuse = "turn off remote"

(*
		6.	type request
*)

  datatype request =
      Option of option_type * action
    | Value of option_value

  fun makestring_request (Option (option, action)) =
       makestring_action action ^ " " ^ makestring_option_type option
    | makestring_request (Value value) = makestring_option_value value

 end
